user  root;
worker_processes  2;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush      on;
    keepalive_timeout  65;
    gzip  on;

    log_format compression '"$request"-$status-$bytes_sent';

    upstream box_server {
        server box:7071;
    }

    # This server is for communicating use (HTTPS)
    server {
        listen 7070;
        ssl on;
        ssl_certificate /etc/ssl/server.crt;
        ssl_certificate_key /etc/ssl/server.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000;" always;

        location /dandelion {
            proxy_pass http://box_server;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 1d;
            proxy_redirect off;
            access_log off;
        }
    }

    # This server is for viewer's browser to take ts file (HTTP)
    server {
        listen 7072;
        location / {
            root /tmp;
            allow all;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            access_log /var/log/nginx/nginx-access.log compression;
        }
    }
}
